---
import BlogPost from '../../components/BlogPostForBlogImageCard.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

interface Post {
  frontmatter: {
    title: string;
    image: string;
    description: string;
  };
  url: string;
}

interface Page {
  currentPage: number;
  lastPage: number;
  data: Post[];
}

export async function getStaticPaths({ paginate }: { paginate: any }): Promise<Array<{ params: { pageNumber: number }; props: { page: Page } }>> {
  const allPosts: any[] = await Astro.glob('../../pages/posts/*.md');
  return paginate(allPosts, { pageSize: 9, params: (page: number) => ({ pageNumber: page + 1 }) });
}

const { page }: { page: Page } = Astro.props;
const currentPage = page.currentPage;
const totalPages = page.lastPage;
---

<BaseLayout pageTitle={'Page ' + currentPage}>
  <div class="grid-container">
    {page.data.map((post: Post) => (
      <BlogPost 
        url={post.url} 
        title={post.frontmatter.title} 
        image={post.frontmatter.image} 
        description={post.frontmatter.description} 
      />
    ))}
  </div>

  <nav aria-label="Pagination">
    <ul class="pagination">
      <li class={currentPage === 1 ? 'disabled' : ''}>
        <a href={currentPage > 1 ? `/blog/${currentPage - 1}` : '#'}>«</a>
      </li>
      {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (
        (page === 1 || page === totalPages || (page >= currentPage - 2 && page <= currentPage + 2)) && (
          <li>
            <a href={`/blog/${page}`} class={currentPage === page ? 'active' : ''}>{page}</a>
          </li>
        )
      ))}
      {currentPage < totalPages - 2 && currentPage !== totalPages - 2 && <li><span>…</span></li>}
      <li class={currentPage === totalPages ? 'disabled' : ''}>
        <a href={currentPage < totalPages ? `/blog/${currentPage + 1}` : '#'}>»</a>
      </li>
    </ul>
  </nav>
  <p>This is page.astro</p>
</BaseLayout>

<style>
main {
  max-width: 60rem;
}
.grid-container {
  display: grid;
  gap: 1rem;
}
.pagination {
  display: flex;
  list-style: none;
  padding: 0;
}
.pagination li {
  margin: 0 0.25rem;
}
.pagination li a {
  text-decoration: none;
  padding: 0.5rem 0.75rem;
  border: 1px solid #ccc;
  border-radius: 4px;
}
.pagination li a.active {
  background-color: #007bff;
  color: white;
}
.pagination li a.disabled {
  pointer-events: none;
  opacity: 0.6;
}
</style>

---
import BlogPost from '../../components/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

interface Post {
  frontmatter: {
    category: string;
    title: string;
  };
  url: string;
}

export async function getStaticPaths(): Promise<Array<{ params: { category: string }; props: { posts: Post[] } }>> {
  const allPosts: Post[] = await Astro.glob('../posts/*.md');

  // Extract unique categories as strings
  const uniqueCategories: string[] = [
    ...new Set(allPosts.map((post: Post) => post.frontmatter.category).filter(Boolean)),
  ];

  // Return the unique categories for generating static paths
  return uniqueCategories.map((category: string) => ({
    params: { category: category.toString() },
    props: { posts: allPosts.filter((post: Post) => post.frontmatter.category === category) },
  }));
}

const { category } = Astro.params;
const { posts }: { posts: Post[] } = Astro.props;
---

<BaseLayout pageTitle={category}>
  <p>Posts in the {category} category</p>
  <ul>
    {posts.map((post: Post) => (
      <BlogPost url={post.url} title={post.frontmatter.title} />
    ))}
  </ul>
</BaseLayout>
